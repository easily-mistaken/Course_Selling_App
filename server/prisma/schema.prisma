// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  username     String?      @unique
  password     String
  role         UserRole     @default(STUDENT)
  
  firstName    String?
  lastName     String?
  profileImage String?
  
  creatorProfile   CreatorProfile?  
  purchases        Purchase[]
  courses          Course[]
  
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model CreatorProfile {
  id           String       @id @default(cuid())
  user         User         @relation(fields: [userId], references: [id])
  userId       String       @unique
  
  brandName    String?
  bio          String?
  socialLinks  Json?
}

model Course {
  id           String       @id @default(cuid())
  creator      User         @relation(fields: [creatorId], references: [id])
  creatorId    String
  
  title        String
  description  String?
  price        Decimal      @db.Decimal(10, 2)
  discount     Decimal?     @db.Decimal(5, 2)
  validity     Int          // Course validity in months
  imageUrl     String?
  content      String?      
  
  purchases    Purchase[]
  
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Purchase {
  id           String       @id @default(cuid())
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  
  course       Course       @relation(fields: [courseId], references: [id])
  courseId     String
  
  purchaseDate DateTime     @default(now())
  expiryDate   DateTime
}

enum UserRole {
  STUDENT
  CREATOR
  ADMIN
}
